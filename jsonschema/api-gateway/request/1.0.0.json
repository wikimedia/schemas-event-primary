{
  "title": "api-gateway/request",
  "description": "A single request to the API Gateway",
  "$id": "/api-gateway/request/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "examples": [
    {
      "$schema": "/api-gateway/request/1.0.0",
      "meta": {
        "dt": "2020-07-01T00:00:00Z",
        "stream": "example_stream"
      },
      "backend_time_ms": 2,
      "total_time_ms": 3,
      "client_id": "test_client"
    }
  ],
  "required": [
    "$schema",
    "meta"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event or entity"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "UTC event datetime, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event or entity pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "minLength": 1
        }
      }
    },
    "http": {
      "type": "object",
      "properties": {
        "has_cookies": {
          "description": "True if the http request has any cookies set",
          "type": "boolean"
        },
        "method": {
          "description": "The HTTP request method (GET, POST, etc.)",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol used for the request (HTTP or HTTPS)",
          "type": "string"
        },
        "request_headers": {
          "description": "Request headers sent by the client.  E.g. user-agent, etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "response_headers": {
          "description": "Response headers sent back to the client (when known).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status_code": {
          "description": "The HTTP status code returned for this request (when known)",
          "type": "integer",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991
        },
        "client_ip": {
          "description": "The http client's IP address, usually set from the X-Client-IP header, the value of which is extracted from X-Forwarded-For.",
          "type": "string"
        }
      }
    },
    "backend_time_ms": {
      "type": "integer",
      "description": "Elapsed milliseconds to process request by the backend service",
      "minimum": -9007199254740991,
      "maximum": 9007199254740991
    },
    "total_time_ms": {
      "type": "integer",
      "description": "Total elapsed milliseconds to process request",
      "minimum": -9007199254740991,
      "maximum": 9007199254740991
    },
    "client_id": {
      "type": "string",
      "description": "The client_id for OAuth2 authenticated clients"
    },
    "route": {
      "type": "string",
      "description": "The name of the request route"
    }
  }
}