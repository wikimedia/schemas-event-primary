{
  "title": "mediawiki/centralnotice/campaign/delete",
  "description": "Represents the deletion of a MW CentralNotice banner campaign",
  "$id": "/mediawiki/centralnotice/campaign/delete/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "examples": [
    {
      "$schema": "/mediawiki/centralnotice/campaign/delete/1.0.0",
      "meta": {
        "dt": "2020-07-01T00:00:00Z",
        "stream": "example_stream"
      },
      "database": "examplewiki",
      "campaign_name": "example",
      "prior_state": {
        "start_dt": "2020-07-01T00:00:00Z",
        "end_dt": "2020-07-02T00:00:00Z",
        "enabled": false,
        "archived": true,
        "banners": [
          "example"
        ]
      }
    }
  ],
  "required": [
    "$schema",
    "campaign_name",
    "database",
    "meta",
    "prior_state"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event or entity"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "UTC event datetime, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event or entity pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "minLength": 1
        }
      }
    },
    "database": {
      "description": "The name of the wiki database this event entity belongs to.",
      "type": "string",
      "minLength": 1
    },
    "performer": {
      "description": "Represents the user that performed this change.",
      "type": "object",
      "required": [
        "user_text",
        "user_groups",
        "user_is_bot"
      ],
      "properties": {
        "user_id": {
          "description": "The user id that performed this change.  This is optional, and will not be present for anonymous users.\n",
          "type": "integer",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991
        },
        "user_text": {
          "description": "The text representation of the user that performed this change.",
          "type": "string",
          "minLength": 1
        },
        "user_groups": {
          "description": "A list of the groups this user belongs to.  E.g. bot, sysop etc.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "user_is_bot": {
          "description": "True if this user is considered to be a bot at the time of this event. This is checked via the $user->isBot() method, which considers both user_groups and user permissions.\n",
          "type": "boolean"
        },
        "user_registration_dt": {
          "description": "The datetime of the user account registration. Not present for anonymous users or if missing in the MW database.\n",
          "type": "string",
          "format": "date-time",
          "maxLength": 128
        },
        "user_edit_count": {
          "description": "The number of edits this user has made at the time of this event. Not present for anonymous users.\n",
          "type": "integer",
          "maximum": 9007199254740991,
          "minimum": 0
        }
      }
    },
    "campaign_name": {
      "description": "The name of the campaign that was deleted.",
      "type": "string"
    },
    "prior_state": {
      "description": "The prior state of the campaign before this event.",
      "type": "object",
      "required": [
        "start_dt",
        "end_dt",
        "enabled",
        "archived",
        "banners"
      ],
      "properties": {
        "start_dt": {
          "description": "The campaign's previous start time, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "maxLength": 128
        },
        "end_dt": {
          "description": "The campaign's previous end time, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "maxLength": 128
        },
        "enabled": {
          "description": "The campaign's previous enabled status.",
          "type": "boolean"
        },
        "archived": {
          "description": "The campaign's previous archived status.",
          "type": "boolean"
        },
        "banners": {
          "description": "Banners previously assigned to this campaign.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "summary": {
      "description": "The summary provided for campaign deletion.",
      "type": "string"
    }
  }
}