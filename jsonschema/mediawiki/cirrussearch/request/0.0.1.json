{
  "title": "mediawiki/cirrussearch/request",
  "description": "A set of requests made by CirrusSearch to ElasticSearch for a single PHP execution context.\n",
  "$id": "/mediawiki/cirrussearch/request/0.0.1",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": false,
  "examples": [
    {
      "$schema": "/mediawiki/cirrussearch/request/0.0.1",
      "meta": {
        "dt": "2020-07-01T00:00:00Z",
        "stream": "example_stream"
      },
      "database": "examplewiki"
    }
  ],
  "required": [
    "$schema",
    "meta"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event or entity"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "UTC event datetime, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event or entity pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "minLength": 1
        }
      }
    },
    "http": {
      "type": "object",
      "description": "Information about the HTTP request that generated this event.",
      "properties": {
        "method": {
          "type": "string",
          "description": "The HTTP request method (GET, POST, etc.)"
        },
        "client_ip": {
          "type": "string",
          "description": "The http client's IP address"
        },
        "request_headers": {
          "type": "object",
          "description": "Request headers sent by the client.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "has_cookies": {
          "type": "boolean",
          "description": "True if the http request has any cookies set"
        }
      }
    },
    "database": {
      "description": "The name of the wiki database that this mediawiki instance uses.",
      "type": "string"
    },
    "mediawiki_host": {
      "type": "string",
      "description": "Hostname of Mediawiki server handling these CirrusSearch requests"
    },
    "params": {
      "type": "object",
      "description": "Request parameters. Usually from the HTTP query string.\n",
      "additionalProperties": {
        "type": "string"
      }
    },
    "search_id": {
      "type": "string",
      "description": "UUIDv4 in base36 id of this search request. This token will be placed on the URI of the generated search results page for the user, so downstream analysis can join between this search request set and clicked on results via webrequest referrer field.  E.g. a result page URI might be /wiki/Special:Search?searchToken=asdhlajsflkafd Requests that come from the Mediawiki API will have this sent via the X-Search-ID response header.\n"
    },
    "source": {
      "type": "string",
      "description": "Where the request is coming from. Typically web, api or cli"
    },
    "identity": {
      "type": "string",
      "description": "A hash identifying the requestor. Includes the IP address and User Agent when available\n"
    },
    "backend_user_tests": {
      "type": "array",
      "description": "List of backend tests the requests are participating in",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "request_time_ms": {
      "type": "integer",
      "description": "Total time of the CirrusSearch request in milliseconds",
      "minimum": 0
    },
    "hits": {
      "type": "array",
      "description": "Final set of result pages returned for the CirrusSearch request",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "page_title": {
            "type": "string",
            "description": "MediaWiki page title of the result"
          },
          "page_id": {
            "type": "integer",
            "description": "MediaWiki page id of the result. May be -1 for interwiki results"
          },
          "index": {
            "type": "string",
            "description": "ElasticSearch index this result came from"
          },
          "score": {
            "type": "number",
            "description": "Score from ElasticSearch for this result"
          },
          "profile_name": {
            "type": "string",
            "description": "The profile name for comp_suggest queries"
          }
        }
      }
    },
    "all_elasticsearch_requests_cached": {
      "type": "boolean",
      "description": "True if all Elasticsearch requests were given responses from cache"
    },
    "elasticsearch_requests": {
      "type": "array",
      "description": "A list of requests made between Mediawiki CirrusSearch extension and elasticsearch in a single execution context\n",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "query": {
            "type": "string",
            "description": "The actual search request"
          },
          "query_type": {
            "type": "string",
            "description": "The general type of query performed, such as full_text, prefix, etc."
          },
          "indices": {
            "type": "array",
            "description": "The list of indices the request was performed against",
            "items": {
              "type": "string"
            }
          },
          "namespaces": {
            "type": "array",
            "description": "Each element is a mediawiki namespace id that was searched",
            "items": {
              "type": "integer"
            }
          },
          "request_time_ms": {
            "type": "integer",
            "description": "The number of milliseconds between passing the query to the Elasticsearch client library and getting the response back in the application\n"
          },
          "search_time_ms": {
            "type": "integer",
            "description": "The number of milliseconds the query took, according to ElasticSearch",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of results requested by the application"
          },
          "hits_total": {
            "type": "integer",
            "description": "The approximate total number of documents matching the query"
          },
          "hits_returned": {
            "type": "integer",
            "description": "The number of results returned to the application"
          },
          "hits_offset": {
            "type": "integer",
            "description": "The offset of the query"
          },
          "suggestion": {
            "type": "string",
            "description": "The suggestion generated by Elasticsearch"
          },
          "suggestion_requested": {
            "type": "boolean",
            "description": "If a suggestion was requested from Elasticsearch",
            "default": false
          },
          "max_score": {
            "type": "number",
            "description": "Max score returned by Elasticsearch. This is the best score in the results before we apply rescore queries. Unfortunately we do not know if it's part of the final result but it can give a rough idea of the score range before we apply the rescore queries.\n"
          },
          "langdetect": {
            "type": "string",
            "description": "- null if no lang detection attepmted, - \"false\" is failure to detect - any other string is the language detected\n"
          },
          "syntax": {
            "type": "array",
            "description": "Tags returned by the query parser describing properties of the query",
            "items": {
              "type": "string"
            }
          },
          "cached": {
            "type": "boolean",
            "description": "True if this request's response was from cache"
          },
          "hits": {
            "type": "array",
            "description": "Final set of result pages returned for this single Elasticsearch request",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "page_title": {
                  "type": "string",
                  "description": "MediaWiki page title of the result"
                },
                "page_id": {
                  "type": "integer",
                  "description": "MediaWiki page id of the result. May be -1 for interwiki results"
                },
                "index": {
                  "type": "string",
                  "description": "Elasticsearch index this result came from"
                },
                "score": {
                  "type": "number",
                  "description": "Score from Elasticsearch for this result",
                  "default": -1
                },
                "profile_name": {
                  "type": "string",
                  "description": "The profile name for comp_suggest queries"
                }
              }
            }
          }
        }
      }
    }
  }
}